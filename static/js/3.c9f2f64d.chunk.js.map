{"version":3,"sources":["components/Dialogs/Message/Message.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Message/MessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","message","newMessage","dialogs","dialogsItems","messages","dialog","activeLink","dialTxt","DialogItem","props","id","avaSrc","name","react_default","a","createElement","className","s","react_router_dom","to","concat","activeClassName","src","alt","Message","maxLength20","maxLength","reduxForm","form","onSubmitSuccess","resetForm","_ref","handleSubmit","onSubmit","Field","component","Textarea","type","placeholder","validate","required","Dialogs","_ref$dialogsPage","dialogsPage","sendMessage","dialogsElemets","map","d","Dialogs_DialogItem_DialogItem","key","messageElements","m","Dialogs_Message_Message","Message_MessageForm","_ref2","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","react_router","mapDispatchToProps","compose","pure"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,WAAA,kDCAlBH,EAAAC,QAAA,CAAkBG,QAAA,yBAAAC,aAAA,8BAAAC,SAAA,gDCAlBN,EAAAC,QAAA,CAAkBM,OAAA,2BAAAC,WAAA,+BAAAC,QAAA,8JCgBHC,EAbI,SAACC,GAAU,IACpBC,EAAqBD,EAArBC,GAAIC,EAAiBF,EAAjBE,OAAQC,EAASH,EAATG,KACpB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEZ,QAChBQ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASC,GAAE,YAAAC,OAAcV,GAAMW,gBAAiBJ,IAAEX,YAChDO,EAAAC,EAAAC,cAAA,OAAKO,IAAKX,EAAQY,IAAI,QACtBV,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAEV,SAAUK,wBCHtBY,EAJC,SAACf,GAAU,IACjBC,EAAgBD,EAAhBC,GAAIV,EAAYS,EAAZT,QACZ,OAAOa,EAAAC,EAAAC,cAAA,OAAKL,GAAIA,EAAIM,UAAWC,IAAEjB,SAAUA,8CCEvCyB,EAAcC,YAAU,IA2BfC,cAAU,CAAEC,KAAM,UAAWC,gBAAiBC,YAAU,YAAxDH,CAzBK,SAAAI,GAAA,IAAGC,EAAHD,EAAGC,aAAH,OAClBnB,EAAAC,EAAAC,cAAA,QAAMkB,SAAUD,EAAchB,UAAWC,IAAEhB,YACzCY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACEtB,KAAK,UACLuB,UAAWC,IACXpB,UAAU,gCACVqB,KAAK,OACLC,YAAY,oGACZC,SAAU,CAACC,IAAUf,MAGzBZ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEC,UAAU,kBACVqB,KAAK,UAFP,8DCcSI,EA9BC,SAAAV,GAGV,IAAAW,EAAAX,EAFJY,YAAezC,EAEXwC,EAFWxC,QAASE,EAEpBsC,EAFoBtC,SACxBwC,EACIb,EADJa,YAGMC,EAAiB3C,EAAQ4C,IAAI,SAAAC,GAAC,OAClClC,EAAAC,EAAAC,cAACiC,EAAD,CAAYC,IAAKF,EAAErC,GAAIA,GAAIqC,EAAErC,GAAIE,KAAMmC,EAAEnC,KAAMD,OAAQoC,EAAEpC,WAGrDuC,EAAkB9C,EAAS0C,IAAI,SAAAK,GAAC,OACpCtC,EAAAC,EAAAC,cAACqC,EAAD,CAASH,IAAKE,EAAEzC,GAAIA,GAAIyC,EAAEzC,GAAIV,QAASmD,EAAEnD,YAO3C,OACEa,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEf,SAChBW,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEd,cACf0C,GAEHhC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEb,UAChBS,EAAAC,EAAAC,cAAA,WAAMmC,GACNrC,EAAAC,EAAAC,cAACsC,EAAD,CAAapB,SAXF,SAAAqB,GAAiB,IAAdtD,EAAcsD,EAAdtD,QAClB4C,EAAY5C,iBChBVuD,EAAkB,SAAAC,GAAK,MAAK,CAAEC,OAAQD,EAAME,KAAKD,SAWxCE,EATU,SAACC,GAMxB,OAAOC,YAAQN,EAARM,CALmB,SAACpD,GAEzB,OADmBA,EAAXgD,OAED5C,EAAAC,EAAAC,cAAC6C,EAAcnD,GADFI,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAU3C,GAAG,cCD/B4C,EAAqB,CAAEnB,iBAEdoB,sBACbH,YALsB,SAAAL,GAAK,MAAK,CAAEb,YAAaa,EAAMb,cAK5BoB,EAAoB,KAAM,CAAEE,MAAM,IAC3DN,EAFaK,CAGbvB","file":"static/js/3.c9f2f64d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__13w5W\",\"newMessage\":\"Message_newMessage__3f4H3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1dHOP\",\"dialogsItems\":\"Dialogs_dialogsItems__2lhgm\",\"messages\":\"Dialogs_messages__1irCh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__1OAQb\",\"activeLink\":\"DialogItem_activeLink__JfBaH\",\"dialTxt\":\"DialogItem_dialTxt__35C3T\"};","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport s from './DialogItem.module.css'\r\n\r\nconst DialogItem = (props) => {\r\n  const { id, avaSrc, name } = props\r\n  return (\r\n    <div className={s.dialog}>\r\n      <NavLink to={`/dialogs/${id}`} activeClassName={s.activeLink}>\r\n        <img src={avaSrc} alt=\"...\" />\r\n        <span className={s.dialTxt}>{name}</span>\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default DialogItem\r\n","import React from 'react'\r\nimport s from './Message.module.css'\r\n\r\nconst Message = (props) => {\r\n  const { id, message } = props\r\n  return <div id={id} className={s.message}>{message}</div>\r\n}\r\nexport default Message\r\n","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport s from './Message.module.css'\r\nimport { Textarea } from '../../common/FormsControls/FormsControls'\r\nimport { required, maxLength } from '../../../utils/validators/validators'\r\nimport { resetForm } from '../../../utils/helpers/resetFormAfterSubmit'\r\n\r\nconst maxLength20 = maxLength(20)\r\n\r\nconst MessageForm = ({ handleSubmit }) => (\r\n  <form onSubmit={handleSubmit} className={s.newMessage}>\r\n    <div className=\"md-form\">\r\n      <Field\r\n        name=\"message\"\r\n        component={Textarea}\r\n        className=\"md-textarea form-control mb-3\"\r\n        type=\"text\"\r\n        placeholder=\"Введите сообщение\"\r\n        validate={[required, maxLength20]}\r\n      />\r\n    </div>\r\n    <div>\r\n      <button\r\n        className=\"btn btn-success\"\r\n        type=\"submit\"\r\n      >\r\n        Отправить\r\n      </button>\r\n    </div>\r\n  </form>\r\n)\r\n\r\n\r\n\r\nexport default reduxForm({ form: 'message', onSubmitSuccess: resetForm('message') })(MessageForm)\r\n","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport MessageForm from './Message/MessageForm'\r\n\r\nconst Dialogs = ({\r\n  dialogsPage: { dialogs, messages },\r\n  sendMessage,\r\n}) => {\r\n\r\n  const dialogsElemets = dialogs.map(d => (\r\n    <DialogItem key={d.id} id={d.id} name={d.name} avaSrc={d.avaSrc} />\r\n  ))\r\n\r\n  const messageElements = messages.map(m => (\r\n    <Message key={m.id} id={m.id} message={m.message} />\r\n  ))\r\n\r\n  const onSubmit = ({ message }) => {\r\n    sendMessage(message)\r\n  }\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>\r\n        {dialogsElemets}\r\n      </div>\r\n      <div className={s.messages}>\r\n        <div>{messageElements}</div>\r\n        <MessageForm onSubmit={onSubmit} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs\r\n","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nconst mapStateToProps = state => ({ isAuth: state.auth.isAuth })\r\n\r\nconst withAuthRedirect = (Component) => {\r\n  const RedirectComponent = (props) => {\r\n    const { isAuth } = props\r\n    if (!isAuth) return <Redirect to=\"/login\" />\r\n    return <Component {...props} />\r\n  }\r\n  return connect(mapStateToProps)(RedirectComponent)\r\n}\r\n\r\nexport default withAuthRedirect\r\n","import { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { sendMessage } from '../../redux/dialogs-reducer'\r\nimport Dialogs from './Dialogs'\r\nimport withAuthRedirect from '../../hoc/withAuthRedirect'\r\n\r\nconst mapStateToProps = state => ({ dialogsPage: state.dialogsPage })\r\n\r\nconst mapDispatchToProps = { sendMessage }\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps, null, { pure: false }),\r\n  withAuthRedirect\r\n)(Dialogs)\r\n"],"sourceRoot":""}